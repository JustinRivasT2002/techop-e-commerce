/**
 * Elastic Email REST API
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://app.elasticemail.com/marketing/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given requestâ€™s description.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { EmailData } from '../ee-api-models';
import { EmailMessageData } from '../ee-api-models';
import { EmailSend } from '../ee-api-models';
import { EmailTransactionalMessageData } from '../ee-api-models';
import { MergeEmailPayload } from '../ee-api-models';
/**
 * EmailsApi - axios parameter creator
 * @export
 */
export declare const EmailsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Returns email details for viewing or rendering. Required Access Level: None
     * @summary View Email
     * @param {string} msgid Message identifier
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    emailsByMsgidViewGet: (msgid: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Send bulk merge email. Required Access Level: SendHttp
     * @summary Send Bulk Emails CSV
     * @param {MergeEmailPayload} mergeEmailPayload Email data
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    emailsMergefilePost: (mergeEmailPayload: MergeEmailPayload, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Send bulk merge email. Required Access Level: SendHttp
     * @summary Send Bulk Emails
     * @param {EmailMessageData} emailMessageData Email data
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    emailsPost: (emailMessageData: EmailMessageData, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Send transactional emails (recipients will be known to each other). Required Access Level: SendHttp
     * @summary Send Transactional Email
     * @param {EmailTransactionalMessageData} emailTransactionalMessageData Email data
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    emailsTransactionalPost: (emailTransactionalMessageData: EmailTransactionalMessageData, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * EmailsApi - functional programming interface
 * @export
 */
export declare const EmailsApiFp: (configuration?: Configuration) => {
    /**
     * Returns email details for viewing or rendering. Required Access Level: None
     * @summary View Email
     * @param {string} msgid Message identifier
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    emailsByMsgidViewGet(msgid: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EmailData>>;
    /**
     * Send bulk merge email. Required Access Level: SendHttp
     * @summary Send Bulk Emails CSV
     * @param {MergeEmailPayload} mergeEmailPayload Email data
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    emailsMergefilePost(mergeEmailPayload: MergeEmailPayload, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EmailSend>>;
    /**
     * Send bulk merge email. Required Access Level: SendHttp
     * @summary Send Bulk Emails
     * @param {EmailMessageData} emailMessageData Email data
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    emailsPost(emailMessageData: EmailMessageData, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EmailSend>>;
    /**
     * Send transactional emails (recipients will be known to each other). Required Access Level: SendHttp
     * @summary Send Transactional Email
     * @param {EmailTransactionalMessageData} emailTransactionalMessageData Email data
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    emailsTransactionalPost(emailTransactionalMessageData: EmailTransactionalMessageData, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EmailSend>>;
};
/**
 * EmailsApi - factory interface
 * @export
 */
export declare const EmailsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Returns email details for viewing or rendering. Required Access Level: None
     * @summary View Email
     * @param {string} msgid Message identifier
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    emailsByMsgidViewGet(msgid: string, options?: any): AxiosPromise<EmailData>;
    /**
     * Send bulk merge email. Required Access Level: SendHttp
     * @summary Send Bulk Emails CSV
     * @param {MergeEmailPayload} mergeEmailPayload Email data
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    emailsMergefilePost(mergeEmailPayload: MergeEmailPayload, options?: any): AxiosPromise<EmailSend>;
    /**
     * Send bulk merge email. Required Access Level: SendHttp
     * @summary Send Bulk Emails
     * @param {EmailMessageData} emailMessageData Email data
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    emailsPost(emailMessageData: EmailMessageData, options?: any): AxiosPromise<EmailSend>;
    /**
     * Send transactional emails (recipients will be known to each other). Required Access Level: SendHttp
     * @summary Send Transactional Email
     * @param {EmailTransactionalMessageData} emailTransactionalMessageData Email data
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    emailsTransactionalPost(emailTransactionalMessageData: EmailTransactionalMessageData, options?: any): AxiosPromise<EmailSend>;
};
/**
 * EmailsApi - interface
 * @export
 * @interface EmailsApi
 */
export interface EmailsApiInterface {
    /**
     * Returns email details for viewing or rendering. Required Access Level: None
     * @summary View Email
     * @param {string} msgid Message identifier
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EmailsApiInterface
     */
    emailsByMsgidViewGet(msgid: string, options?: AxiosRequestConfig): AxiosPromise<EmailData>;
    /**
     * Send bulk merge email. Required Access Level: SendHttp
     * @summary Send Bulk Emails CSV
     * @param {MergeEmailPayload} mergeEmailPayload Email data
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EmailsApiInterface
     */
    emailsMergefilePost(mergeEmailPayload: MergeEmailPayload, options?: AxiosRequestConfig): AxiosPromise<EmailSend>;
    /**
     * Send bulk merge email. Required Access Level: SendHttp
     * @summary Send Bulk Emails
     * @param {EmailMessageData} emailMessageData Email data
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EmailsApiInterface
     */
    emailsPost(emailMessageData: EmailMessageData, options?: AxiosRequestConfig): AxiosPromise<EmailSend>;
    /**
     * Send transactional emails (recipients will be known to each other). Required Access Level: SendHttp
     * @summary Send Transactional Email
     * @param {EmailTransactionalMessageData} emailTransactionalMessageData Email data
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EmailsApiInterface
     */
    emailsTransactionalPost(emailTransactionalMessageData: EmailTransactionalMessageData, options?: AxiosRequestConfig): AxiosPromise<EmailSend>;
}
/**
 * EmailsApi - object-oriented interface
 * @export
 * @class EmailsApi
 * @extends {BaseAPI}
 */
export declare class EmailsApi extends BaseAPI implements EmailsApiInterface {
    /**
     * Returns email details for viewing or rendering. Required Access Level: None
     * @summary View Email
     * @param {string} msgid Message identifier
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EmailsApi
     */
    emailsByMsgidViewGet(msgid: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<EmailData>>;
    /**
     * Send bulk merge email. Required Access Level: SendHttp
     * @summary Send Bulk Emails CSV
     * @param {MergeEmailPayload} mergeEmailPayload Email data
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EmailsApi
     */
    emailsMergefilePost(mergeEmailPayload: MergeEmailPayload, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<EmailSend>>;
    /**
     * Send bulk merge email. Required Access Level: SendHttp
     * @summary Send Bulk Emails
     * @param {EmailMessageData} emailMessageData Email data
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EmailsApi
     */
    emailsPost(emailMessageData: EmailMessageData, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<EmailSend>>;
    /**
     * Send transactional emails (recipients will be known to each other). Required Access Level: SendHttp
     * @summary Send Transactional Email
     * @param {EmailTransactionalMessageData} emailTransactionalMessageData Email data
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EmailsApi
     */
    emailsTransactionalPost(emailTransactionalMessageData: EmailTransactionalMessageData, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<EmailSend>>;
}
