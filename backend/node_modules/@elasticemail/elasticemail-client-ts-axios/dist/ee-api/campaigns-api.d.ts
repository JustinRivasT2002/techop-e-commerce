/**
 * Elastic Email REST API
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://app.elasticemail.com/marketing/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given requestâ€™s description.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { Campaign } from '../ee-api-models';
/**
 * CampaignsApi - axios parameter creator
 * @export
 */
export declare const CampaignsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Delete the specific campaign.  This does not cancel in progress email, see Cancel In Progress. Required Access Level: ModifyCampaigns
     * @summary Delete Campaign
     * @param {string} name Name of Campaign to delete
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    campaignsByNameDelete: (name: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the specified campaign details. Required Access Level: ViewCampaigns
     * @summary Load Campaign
     * @param {string} name Name of Campaign to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    campaignsByNameGet: (name: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Updates a previously added campaign.  Only Active and Paused campaigns can be updated. Required Access Level: ModifyCampaigns
     * @summary Update Campaign
     * @param {string} name Name of Campaign to update
     * @param {Campaign} campaign JSON representation of a campaign
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    campaignsByNamePut: (name: string, campaign: Campaign, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a list all of your campaigns. Limited to 1000 results. Required Access Level: ViewCampaigns
     * @summary Load Campaigns
     * @param {string} [search] Text fragment used for searching in Campaign name (using the \&#39;contains\&#39; rule)
     * @param {number} [offset] How many items should be returned ahead.
     * @param {number} [limit] Maximum number of returned items.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    campaignsGet: (search?: string, offset?: number, limit?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Add a campaign for processing. Required Access Level: ModifyCampaigns
     * @summary Add Campaign
     * @param {Campaign} campaign JSON representation of a campaign
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    campaignsPost: (campaign: Campaign, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * CampaignsApi - functional programming interface
 * @export
 */
export declare const CampaignsApiFp: (configuration?: Configuration) => {
    /**
     * Delete the specific campaign.  This does not cancel in progress email, see Cancel In Progress. Required Access Level: ModifyCampaigns
     * @summary Delete Campaign
     * @param {string} name Name of Campaign to delete
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    campaignsByNameDelete(name: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Returns the specified campaign details. Required Access Level: ViewCampaigns
     * @summary Load Campaign
     * @param {string} name Name of Campaign to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    campaignsByNameGet(name: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Campaign>>;
    /**
     * Updates a previously added campaign.  Only Active and Paused campaigns can be updated. Required Access Level: ModifyCampaigns
     * @summary Update Campaign
     * @param {string} name Name of Campaign to update
     * @param {Campaign} campaign JSON representation of a campaign
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    campaignsByNamePut(name: string, campaign: Campaign, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Campaign>>;
    /**
     * Returns a list all of your campaigns. Limited to 1000 results. Required Access Level: ViewCampaigns
     * @summary Load Campaigns
     * @param {string} [search] Text fragment used for searching in Campaign name (using the \&#39;contains\&#39; rule)
     * @param {number} [offset] How many items should be returned ahead.
     * @param {number} [limit] Maximum number of returned items.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    campaignsGet(search?: string, offset?: number, limit?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Campaign>>>;
    /**
     * Add a campaign for processing. Required Access Level: ModifyCampaigns
     * @summary Add Campaign
     * @param {Campaign} campaign JSON representation of a campaign
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    campaignsPost(campaign: Campaign, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Campaign>>;
};
/**
 * CampaignsApi - factory interface
 * @export
 */
export declare const CampaignsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Delete the specific campaign.  This does not cancel in progress email, see Cancel In Progress. Required Access Level: ModifyCampaigns
     * @summary Delete Campaign
     * @param {string} name Name of Campaign to delete
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    campaignsByNameDelete(name: string, options?: any): AxiosPromise<void>;
    /**
     * Returns the specified campaign details. Required Access Level: ViewCampaigns
     * @summary Load Campaign
     * @param {string} name Name of Campaign to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    campaignsByNameGet(name: string, options?: any): AxiosPromise<Campaign>;
    /**
     * Updates a previously added campaign.  Only Active and Paused campaigns can be updated. Required Access Level: ModifyCampaigns
     * @summary Update Campaign
     * @param {string} name Name of Campaign to update
     * @param {Campaign} campaign JSON representation of a campaign
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    campaignsByNamePut(name: string, campaign: Campaign, options?: any): AxiosPromise<Campaign>;
    /**
     * Returns a list all of your campaigns. Limited to 1000 results. Required Access Level: ViewCampaigns
     * @summary Load Campaigns
     * @param {string} [search] Text fragment used for searching in Campaign name (using the \&#39;contains\&#39; rule)
     * @param {number} [offset] How many items should be returned ahead.
     * @param {number} [limit] Maximum number of returned items.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    campaignsGet(search?: string, offset?: number, limit?: number, options?: any): AxiosPromise<Array<Campaign>>;
    /**
     * Add a campaign for processing. Required Access Level: ModifyCampaigns
     * @summary Add Campaign
     * @param {Campaign} campaign JSON representation of a campaign
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    campaignsPost(campaign: Campaign, options?: any): AxiosPromise<Campaign>;
};
/**
 * CampaignsApi - interface
 * @export
 * @interface CampaignsApi
 */
export interface CampaignsApiInterface {
    /**
     * Delete the specific campaign.  This does not cancel in progress email, see Cancel In Progress. Required Access Level: ModifyCampaigns
     * @summary Delete Campaign
     * @param {string} name Name of Campaign to delete
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignsApiInterface
     */
    campaignsByNameDelete(name: string, options?: AxiosRequestConfig): AxiosPromise<void>;
    /**
     * Returns the specified campaign details. Required Access Level: ViewCampaigns
     * @summary Load Campaign
     * @param {string} name Name of Campaign to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignsApiInterface
     */
    campaignsByNameGet(name: string, options?: AxiosRequestConfig): AxiosPromise<Campaign>;
    /**
     * Updates a previously added campaign.  Only Active and Paused campaigns can be updated. Required Access Level: ModifyCampaigns
     * @summary Update Campaign
     * @param {string} name Name of Campaign to update
     * @param {Campaign} campaign JSON representation of a campaign
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignsApiInterface
     */
    campaignsByNamePut(name: string, campaign: Campaign, options?: AxiosRequestConfig): AxiosPromise<Campaign>;
    /**
     * Returns a list all of your campaigns. Limited to 1000 results. Required Access Level: ViewCampaigns
     * @summary Load Campaigns
     * @param {string} [search] Text fragment used for searching in Campaign name (using the \&#39;contains\&#39; rule)
     * @param {number} [offset] How many items should be returned ahead.
     * @param {number} [limit] Maximum number of returned items.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignsApiInterface
     */
    campaignsGet(search?: string, offset?: number, limit?: number, options?: AxiosRequestConfig): AxiosPromise<Array<Campaign>>;
    /**
     * Add a campaign for processing. Required Access Level: ModifyCampaigns
     * @summary Add Campaign
     * @param {Campaign} campaign JSON representation of a campaign
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignsApiInterface
     */
    campaignsPost(campaign: Campaign, options?: AxiosRequestConfig): AxiosPromise<Campaign>;
}
/**
 * CampaignsApi - object-oriented interface
 * @export
 * @class CampaignsApi
 * @extends {BaseAPI}
 */
export declare class CampaignsApi extends BaseAPI implements CampaignsApiInterface {
    /**
     * Delete the specific campaign.  This does not cancel in progress email, see Cancel In Progress. Required Access Level: ModifyCampaigns
     * @summary Delete Campaign
     * @param {string} name Name of Campaign to delete
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignsApi
     */
    campaignsByNameDelete(name: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Returns the specified campaign details. Required Access Level: ViewCampaigns
     * @summary Load Campaign
     * @param {string} name Name of Campaign to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignsApi
     */
    campaignsByNameGet(name: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Campaign>>;
    /**
     * Updates a previously added campaign.  Only Active and Paused campaigns can be updated. Required Access Level: ModifyCampaigns
     * @summary Update Campaign
     * @param {string} name Name of Campaign to update
     * @param {Campaign} campaign JSON representation of a campaign
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignsApi
     */
    campaignsByNamePut(name: string, campaign: Campaign, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Campaign>>;
    /**
     * Returns a list all of your campaigns. Limited to 1000 results. Required Access Level: ViewCampaigns
     * @summary Load Campaigns
     * @param {string} [search] Text fragment used for searching in Campaign name (using the \&#39;contains\&#39; rule)
     * @param {number} [offset] How many items should be returned ahead.
     * @param {number} [limit] Maximum number of returned items.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignsApi
     */
    campaignsGet(search?: string, offset?: number, limit?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Campaign[]>>;
    /**
     * Add a campaign for processing. Required Access Level: ModifyCampaigns
     * @summary Add Campaign
     * @param {Campaign} campaign JSON representation of a campaign
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignsApi
     */
    campaignsPost(campaign: Campaign, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Campaign>>;
}
